#!/bin/sh

doc_root=$(awk -F '"' '/doc_root =/ {print $2}' /etc/php.ini)
stop () {
	prof=`grep "profile " /home/ab/config |grep -v source |awk -F"'" '{print $2}'`
	IFACE=$(grep IFACE /home/ab/gsm |awk -F"'" '{print $2}')
	waktu=`eval date +%H:%M:%S`
	echo "stopped" > /tmp/prf
	echo "$waktu Profile Stoped...." > ${doc_root}dial.log
	if [[ "$IFACE" == "3g" ]]; then
		ifdown $IFACE
	elif [[ "$IFACE" == "4g" ]]; then
		ifdown $IFACE
		echo -ne "AT^NDISDUP=1,0\r\n" > /dev/cdc-wdm0
	fi
	vpn stop
	/etc/init.d/profile disable
	echo "stoping profile	OK"
	echo " "
}

start () {
		waktu=`eval date +%H:%M:%S`
		vpn stop
		ls /etc/init.d |grep profile > /dev/null
		if [ $? == 1 ];then
		cat > /etc/init.d/profile << END
#!/bin/sh /etc/rc.common
START=99

start () {
	profile start &
}

stop () {
	profile stop
}

restart () {
	profile start &
}
END
chmod 755 /etc/init.d/profile
		fi
		list=$(ls /home/ab/profiles |grep -w $prof)
		if [ $list ];then
			profile='/home/ab/profiles/'$prof
			/etc/init.d/profile enable
			echo "started" > /tmp/prf
			echo "profile $prof di aktifkan"
			vpn start & 
			echo "$waktu Profile : $prof Started...." > ${doc_root}dial.log
		 else
			echo "profile $prof belum tersedia"
			echo "profile yang tersedia:"
			list=$(ls /home/ab/profiles)
			for line in $list
			do
				echo $line
			done
		fi
}

case $1 in
"status-koneksi")
	profile=`grep "profile " /home/ab/config |grep -v source_update |awk -F"'" '{print $2}'`
	update=`grep "update " /home/ab/profiles/$profile |awk -F"'" '{print $2}'`
	use_vpn=`grep "use_vpn " /home/ab/profiles/$profile |awk -F"'" '{print $2}'`
	use_ssh=`grep "use_ssh " /home/ab/profiles/$profile |awk -F"'" '{print $2}'`
	use_config=$(grep use_config /home/ab/config|awk -F"'" '{print $2}')
	ssh_account=$(grep ssh_account /home/ab/config|awk -F"'" '{print $2}')
	file_config=$(grep file_config /home/ab/config|awk -F"'" '{print $2}')
	waktu=`eval date +%Y-%m-%d-%H:%M:%S`
	IFACE=$(grep IFACE /home/ab/gsm |awk -F"'" '{print $2}')
	apn=`grep apn_modem /home/ab/profiles/$profile|awk -F"'" '{print $2}'`
	echo "	 STATUS KONEKSI ROUTER"
	echo "================================="
	echo "Profile	: $profile $update"
	if [ $use_config ];then
		if [ $use_config == 'yes' ];then
			echo "VPN Account : $file_config"
		else
			echo "VPN Account : Default"
		fi
	else
		echo "VPN Account : Default"
	fi
	if [[ -n $ssh_account ]]; then
	 echo "SSH Account : $ssh_account"
	fi
	echo "APN Modem : $apn"
	if [[ "$IFACE" == "3g" ]]; then
		ip=`ifconfig 3g-3g | grep "inet addr" | cut -d ":" -f 2 | sed 's/ .*//g'`
	elif [[ "$IFACE" == "4g" ]]; then
		ip=`ifconfig wwan0 | grep "inet addr" | cut -d ":" -f 2 | sed 's/ .*//g'`
	elif [[ "$IFACE" == "eth2" ]]; then
		ip=`ifconfig $IFACE | grep "inet addr" | cut -d ":" -f 2 | sed 's/ .*//g'`
	elif [[ "$IFACE" == "eth1" ]]; then
		ip=`ifconfig $IFACE | grep "inet addr" | cut -d ":" -f 2 | sed 's/ .*//g'`
	elif [[ "$IFACE" == "usb0" ]]; then
		ip=`ifconfig $IFACE | grep "inet addr" | cut -d ":" -f 2 | sed 's/ .*//g'`
	fi
	if [ $ip ];then
		echo "IP Modem	: $ip"
		if [[ "$IFACE" == "3g" ]]; then
			RX=$(ifconfig 3g-$IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$2}')
			TX=$(ifconfig 3g-$IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$4}')
		elif [[ "$IFACE" == "4g" ]]; then
			RX=$(ifconfig wwan0 | awk -F[\(\)] '/bytes/ {printf "%s",$2}')
			TX=$(ifconfig wwan0 | awk -F[\(\)] '/bytes/ {printf "%s",$4}')
		elif [[ "$IFACE" == "eth2" ]]; then
			RX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$2}')
			TX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$4}')
		elif [[ "$IFACE" == "eth1" ]]; then
			RX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$2}')
			TX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$4}')
		elif [[ "$IFACE" == "usb0" ]]; then
			RX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$2}')
			TX=$(ifconfig $IFACE | awk -F[\(\)] '/bytes/ {printf "%s",$4}')
		fi
		echo "Download: $RX - Upload: $TX"
		ipv=$(ifconfig tun0 |grep inet |awk -F":" '{print $3}' |awk -F" " '{print $1}')
		tail -1 ${doc_root}vpn.log | grep "Initialization Sequence Completed" > /dev/null 2> /dev/null
		if [ $? == 0 ];then
			echo "Status VPN: Connected ($ipv)"
		else
			echo "Status VPN: Disconnected"
		fi
		if [[ $use_ssh == 'yes' ]]; then
		 port=1095
		 iplocal=$(uci get network.lan.ipaddr)
		 ssh_login=$(grep ssh_login /home/ab/config|awk -F"'" '{print $2}')
		 for i in $(seq 1 $ssh_login);do
			ssh=$(netstat -lpnt | grep -E "$iplocal:$port.*ssh")
			if [[ -n "$ssh" ]]; then
				echo "Status SSH $i: Connected"
			else
				echo "Status SSH $i: Disconnected"
			fi
			port=$(($port+1))
		 done
		fi

		if [ $use_vpn == "yes" ];then
			echo "Status SSH: Disconnected"
		fi
		up=$(ubus call network.interface.$IFACE status | grep uptime | awk '{print $2}' | tr ',' ' ')
		echo "Connection Uptime: $(date -u -d @${up} +"%T")"
	fi
	if [[ "$IFACE" == "3g" ]]; then
		echo "Interface Modem: 3g"
	elif [[ "$IFACE" == "4g" ]]; then
		echo "Interface Modem: 4g non HiLink (wwan0)"
	elif [[ "$IFACE" == "eth2" ]]; then
		echo "Interface Modem: E3372 HiLink (eth2)"
	elif [[ "$IFACE" == "eth1" ]]; then
		echo "Interface Modem: E3372 HiLink (eth1)"
	elif [[ "$IFACE" == "usb0" ]]; then
		echo "Interface Modem: Tetring USB"
	fi
	echo "================================="

;;
"stop")
	stop
;;
"start")
	arg=$2
	pidof vpn && vpn stop
	pidof socks && killall -9 socks
	pidof gssh && gssh -q
	if [ $arg ];then
		prof=$arg
		cp=`grep "profile " /home/ab/config |awk -F"'" '{print $2}'`
		sed -i -e "s/$cp/$prof/g" /home/ab/config
		start
	else
		prof=`grep "profile " /home/ab/config |grep -v source |awk -F"'" '{print $2}'`
		cp=`grep "profile " /home/ab/config |awk -F"'" '{print $2}'`
		sed -i -e "s/$cp/$prof/g" /home/ab/config
		start
	fi
;;
"hw-info")
	os=`uname -a |awk -F"#" '{print $1}'`
	chipset=`cat /proc/cpuinfo |grep 'system type' |awk -F":" '{print $2}'`
	model=`cat /proc/cpuinfo |grep 'machine' |awk -F":" '{print $2}'`
	cpu=`cat /proc/cpuinfo |grep 'cpu model' |awk -F":" '{print $2}'`
	clck=`cat /proc/cpuinfo |grep 'BogoMIPS' |awk -F":" '{print $2}'`
	mem=`cat /proc/meminfo |grep 'MemTotal' |awk -F":" '{print $2}'`
	echo "Operating system : $os"
	echo "Model CPU : $cpu"
	echo "Chipset : $chipset"
	echo "Clock CPU : $clck Mhz"
	if [ $model ];then
	echo "Machine : $model"
	else
		 hardware=$(cat /proc/cpuinfo |grep 'Hardware' |awk -F":" '{print $2}')
	echo "Hardware : $hardware" 
	fi 
	echo "Ram : $mem"
	

;;
"wifi-clients")
echo "	Daftar client WIFI yang terkonek"
echo "	Host name | IpAddress | MAC address"
echo ""
for interface in `iw dev | grep Interface | cut -f 2 -s -d" "`
do
	maclist=`iw dev $interface station dump | grep Station | cut -f 2 -s -d" "`
	for mac in $maclist
	do
	ip="UNKN"
	host=""
	ip=`cat /tmp/dhcp.leases | cut -f 2,3,4 -s -d" " | grep $mac | cut -f 2 -s -d" "`
	host=`cat /tmp/dhcp.leases | cut -f 2,3,4 -s -d" " | grep $mac | cut -f 3 -s -d" "`
	echo -e "$host | $ip | $mac"
	done
done
;;
*)
	echo "perintah yang tersedia:"
	echo "profile version						info versi profile anda"
	echo "profile version update				info versi profile yang tersedia saat ini" 
	echo "profile install						install scrypt profile dari awal"
	echo "profile scrypt-install [scrypt]		 install scrypt tambahan"
	echo "profile scrypt-list					informasi scrypt yang tersedia"
	echo "profile show							informasi profile yang di pake saat ini"
	echo "profile show-config [nm-profile]		informasi config"
	echo "profile info [nama profile]				tampilkan info tambahan profile"
	echo "profile list							informasi profile yang tersedia"
	echo "profile update						update scrypt profile"
	echo "profile update list					informasi profile yang tersedia di server"
	echo "profile update [nama-profile]				download profile dari server"
	echo "profile update-web					update interface web dari server"
	echo "profile update-inject						update scrypt inject"
	echo "profile stop							stop profile yang sedang berjalan"
	echo "profile start							start profile tanpa mengubah profile"
	echo "profile start [nama-profile]				memulai runing profile baru"
	echo "profile status-modem					informasi status modem"
	echo "profile status-koneksi				informasi status koneksi"
	echo "profile hw-info						informasi os hardware dan lain2"
	echo "profile wifi-clients					daftar client wifi yang terkonek"
;;
esac